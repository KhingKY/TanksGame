using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Threading.Tasks;

namespace CMPE2800_Lab02
{
    //this enum determines whether or not we can destroy the wall with a tank shell hit
    enum WallType { Hard, Weak }
    //TODO: expand the WallShape enum to include more shapes
    enum WallShape { L, l, o, hl }
    class Wall : Shape
    {
        //Bitmap image for the walls
        Bitmap _bm;
        //use the WallType to know what image to render for the wall color
        WallType _wallType;
        //leverage the base class constructor except for the WallType
        public Wall(Point position, WallType wt, Bitmap bm) : base(position)
        {
            _bm = bm;
            _wallType = wt;
            //assign the breakable flag
            _model = new GraphicsPath();
            _model.AddRectangle(new RectangleF(Position.X, Position.Y, Tilesize, Tilesize));
            IsMarkedForDeath = false;
            Breakable = _wallType == WallType.Hard ? false : true;
        }
        public override void Render(Graphics gr)
        {
            gr.FillRegion(new HatchBrush(HatchStyle.HorizontalBrick, Color.Black, Color.Gray), new Region( GetPath()));
           // gr.DrawImage(_bm, Position.X, Position.Y, Tilesize, Tilesize);
        }
        public override GraphicsPath GetPath()
        {
            return _model.Clone() as GraphicsPath;
        }
        public bool Breakable { get; set; }
    }
}